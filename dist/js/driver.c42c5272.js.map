{"version":3,"file":"js/driver.c42c5272.js","mappings":"6MACSA,MAAM,U,uBAIEA,MAAM,a,GACFA,MAAM,mC,GAQNA,MAAM,mC,GAQNA,MAAM,kB,SAOUA,MAAM,W,yHA5BvCC,EAAAA,EAAAA,IA8BM,MA9BNC,EA8BM,CA7BSC,EAAAC,YAAS,WAApBH,EAAAA,EAAAA,IAAwC,MAAAI,EAAlB,iBACNF,EAAAG,WAAQ,WAAxBL,EAAAA,EAAAA,IAAqC,MAAAM,EAAX,YAAK,WAC/BN,EAAAA,EAAAA,IA0BWO,EAAAA,GAAA,CAAAC,IAAA,KAzBPC,EAAAA,EAAAA,GAuBM,MAvBNC,EAuBM,EAtBFD,EAAAA,EAAAA,GAOM,MAPNE,EAOM,EANFC,EAAAA,EAAAA,IAKgBC,EAAA,C,WAJHC,EAAAC,OAAOC,K,qCAAPF,EAAAC,OAAOC,KAAIC,GACpBC,MAAM,MACN,eAAa,OACZC,UAASC,EAAAC,a,sCAGlBZ,EAAAA,EAAAA,GAOM,MAPNa,EAOM,EANFV,EAAAA,EAAAA,IAKgBC,EAAA,C,WAJHC,EAAAC,OAAOQ,W,qCAAPT,EAAAC,OAAOQ,WAAUN,GAC1BC,MAAM,OACN,eAAa,OACbM,KAAK,U,0BAGbf,EAAAA,EAAAA,GAKM,MALNgB,EAKM,EAJFb,EAAAA,EAAAA,IAA0Fc,EAAA,CAAnF3B,MAAM,cAAc4B,UAAU,IAAKC,QAAOR,EAAAS,U,mBAAU,IAAuB,mBAApBT,EAAAU,mBAAiB,M,qBAC/ElB,EAAAA,EAAAA,IAECmB,EAAA,CAFaC,GAAI,CAAAhB,KAAA,YAAmB,C,kBAChC,IAA0D,EAA1DJ,EAAAA,EAAAA,IAA0Dc,EAAA,CAAnD3B,MAAM,cAAc4B,UAAU,K,mBAAI,IAAS,UAAT,gB,mBAI3CzB,EAAA+B,eAAY,WAAvBjC,EAAAA,EAAAA,IAAiE,MAAjEkC,GAAiEC,EAAAA,EAAAA,IAArBjC,EAAA+B,cAAY,2B,oBAQpE,GACIjB,KAAM,eAENoB,IAAAA,GACI,MAAO,CACHrB,OAAQ,CAAC,EAEjB,EAEAsB,SAAU,KACHC,EAAAA,EAAAA,IAAW,CAAC,qBACZA,EAAAA,EAAAA,IAAW,UAAW,CAAC,gBAAiB,YAAa,aACxDC,QAAAA,GACI,OAAOC,KAAKC,OAAOC,OAAOH,QAC9B,EACAT,iBAAAA,GACI,OAAOU,KAAKD,SAAW,WAAa,QACxC,GAGJI,OAAAA,GACIH,KAAKI,kBACLJ,KAAKzB,OAAS,IAAKyB,KAAKK,cAAcL,KAAKD,WAC3CO,QAAQC,IAAIP,KAAKzB,QACjByB,KAAKQ,gBAAgB,KACzB,EAEAC,QAAS,KACFC,EAAAA,EAAAA,IAAW,CAAC,wBACZA,EAAAA,EAAAA,IAAW,UAAW,CAAC,eAAgB,YAAa,oBACvD7B,WAAAA,CAAY8B,GACR,MAAMC,EAAUD,EAAMC,SAAWD,EAAME,MACnCD,GAAW,IAAMA,GAAW,IAC5BD,EAAMG,gBAEd,EACAzB,QAAAA,GACQW,KAAKzB,OAAOC,MAAQwB,KAAKzB,OAAOQ,YAChCiB,KAAKQ,gBAAgB,MAChBR,KAAKD,SAENC,KAAKe,aAAa,CACdC,OAAQhB,KAAKzB,OAAO0C,GACpBrB,KAAMI,KAAKzB,SAJCyB,KAAKkB,UAAUlB,KAAKzB,QAMxCyB,KAAKmB,QAAQC,KAAK,CACd5C,KAAM,aAEPwB,KAAKQ,gBAAgB,uCAChC,I,QCjFR,MAAMa,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://homework-store-1/./src/views/DriverEditor.vue","webpack://homework-store-1/./src/views/DriverEditor.vue?bfe3"],"sourcesContent":["<template>\r\n    <div class=\"editor\">\r\n        <div v-if=\"isLoading\">Loading ....</div>\r\n        <div v-else-if=\"hasError\">Error</div>\r\n        <template v-else>\r\n            <div class=\"container\">\r\n                <div class=\"driver-editor__item editor-item\">\r\n                    <v-text-field\r\n                        v-model=\"driver.name\"\r\n                        label=\"ПІБ\"\r\n                        hide-details=\"auto\"\r\n                        @keydown=\"isNameValid\"\r\n                    ></v-text-field>\r\n                </div>\r\n                <div class=\"driver-editor__item editor-item\">\r\n                    <v-text-field\r\n                        v-model=\"driver.experience\"\r\n                        label=\"Стаж\"\r\n                        hide-details=\"auto\"\r\n                        type=\"number\"\r\n                    ></v-text-field>\r\n                </div>\r\n                <div class=\"editor-actions\">\r\n                    <v-btn class=\"list-button\" elevation=\"8\" @click=\"onAction\">{{ buttonActionTitle }}</v-btn>\r\n                    <router-link :to=\"{ name: 'drivers' }\"\r\n                        ><v-btn class=\"list-button\" elevation=\"8\">Відмінити</v-btn></router-link\r\n                    >\r\n                </div>\r\n            </div>\r\n            <div v-if=\"errorMessage\" class=\"err-msg\">{{ errorMessage }}</div>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex'\r\n\r\nexport default {\r\n    name: 'DriverEditor',\r\n\r\n    data() {\r\n        return {\r\n            driver: {},\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        ...mapGetters(['errorMessage']),\r\n        ...mapGetters('drivers', ['getDriverById', 'isLoading', 'hasError']),\r\n        driverId() {\r\n            return this.$route.params.driverId\r\n        },\r\n        buttonActionTitle() {\r\n            return this.driverId ? 'Зберегти' : 'Додати'\r\n        },\r\n    },\r\n\r\n    created() {\r\n        this.loadDriversList()\r\n        this.driver = { ...this.getDriverById(this.driverId) }\r\n        console.log(this.driver)\r\n        this.setErrorMessage(null)\r\n    },\r\n\r\n    methods: {\r\n        ...mapActions(['setErrorMessage']),\r\n        ...mapActions('drivers', ['updateDriver', 'addDriver', 'loadDriversList']),\r\n        isNameValid(event) {\r\n            const keyCode = event.keyCode || event.which\r\n            if (keyCode >= 48 && keyCode <= 57) {\r\n                event.preventDefault()\r\n            }\r\n        },\r\n        onAction() {\r\n            if (this.driver.name && this.driver.experience) {\r\n                this.setErrorMessage(null)\r\n                if (!this.driverId) this.addDriver(this.driver)\r\n                else\r\n                    this.updateDriver({\r\n                        itemId: this.driver.id,\r\n                        data: this.driver,\r\n                    })\r\n                this.$router.push({\r\n                    name: 'drivers',\r\n                })\r\n            } else this.setErrorMessage(\"Заповнення обох полів є обов'язковим\")\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>","import { render } from \"./DriverEditor.vue?vue&type=template&id=352b13a2\"\nimport script from \"./DriverEditor.vue?vue&type=script&lang=js\"\nexport * from \"./DriverEditor.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_ctx","isLoading","_hoisted_2","hasError","_hoisted_3","_Fragment","key","_createElementVNode","_hoisted_4","_hoisted_5","_createVNode","_component_v_text_field","$data","driver","name","$event","label","onKeydown","$options","isNameValid","_hoisted_6","experience","type","_hoisted_7","_component_v_btn","elevation","onClick","onAction","buttonActionTitle","_component_router_link","to","errorMessage","_hoisted_8","_toDisplayString","data","computed","mapGetters","driverId","this","$route","params","created","loadDriversList","getDriverById","console","log","setErrorMessage","methods","mapActions","event","keyCode","which","preventDefault","updateDriver","itemId","id","addDriver","$router","push","__exports__","render"],"sourceRoot":""}